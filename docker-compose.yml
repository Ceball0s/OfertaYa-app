services:
  eureka-server:
    image: cristhian222/ofertaya-eureka-server:latest
    container_name: eureka_server
    ports:
      - "8761:8761"
    networks:
      - ofertaya_net
    environment:
      - SPRING_APPLICATION_NAME=eureka-server
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
  

  gateway-service:
    image: cristhian222/ofertaya-gateway-service:latest
    container_name: ofertaya_gateway_app
    depends_on:
      - eureka-server
    ports:
      - "9000:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net


  


  subasta-service:
    image: cristhian222/ofertaya-subasta-service:latest
    container_name: ofertaya_subasta_app
    depends_on:
      - eureka-server
      - db_subasta
    ports:
      - "9001:8081"
    environment:
      DB_URL: jdbc:postgresql://db_subasta:5432/ofertaya-subasta
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net

  oferta-service:
    image: cristhian222/ofertaya-oferta-service:latest
    container_name: ofertaya_oferta_app
    depends_on:
      - db_ofertas
      - eureka-server
    ports:
      - "9002:8082"
    environment:
      DB_URL: jdbc:postgresql://db_ofertas:5432/ofertaya-oferta
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net

  pedidos-service:
    image: cristhian222/ofertaya-pedidos-service:latest
    container_name: ofertaya_pedido_app
    depends_on:
      - db_pedidos
      - eureka-server
    ports:
      - "9003:8083"
    environment:
      DB_URL: jdbc:postgresql://db_pedidos:5432/ofertaya-pedidos
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net

  auth-service:
    image: cristhian222/ofertaya-auth-service:latest
    container_name: ofertaya_auth_app
    depends_on:
      - eureka-server
      - db_auth
    ports:
      - "9004:8084"
    environment:
      DB_URL: jdbc:postgresql://db_auth:5432/ofertaya-auth
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net

  chat-service:
    image: cristhian222/ofertaya-chat-service:latest
    container_name: ofertaya_chat_app
    depends_on:
      - eureka-server
      - db_chat
    ports:
      - "9006:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_chat:5432/chat_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net

  # ==================== SERVICIOS DE MONITOREO ====================

  # Microservicio de Monitoreo
  monitoreo-service:
    image: cristhian222/ofertaya-monitoreo-service:latest
    container_name: ofertaya_monitoreo_app
    ports:
      - "9005:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_monitoreo:5432/monitoreo_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - db_monitoreo
      - eureka-server
    networks:
      - ofertaya_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: ofertaya_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Microservicio_Monitoreo/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ofertaya_net
    depends_on:
      - monitoreo-service

  # Loki para logs
  loki:
    image: grafana/loki:latest
    container_name: ofertaya_loki
    ports:
      - "3100:3100"
    volumes:
      - ./Microservicio_Monitoreo/config/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/var/loki
      - loki_data:/wal
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ofertaya_net

  # Promtail para recolectar logs
  promtail:
    image: grafana/promtail:latest
    container_name: ofertaya_promtail
    volumes:
      - ./Microservicio_Monitoreo/config/promtail-config.yaml:/etc/promtail/config.yml
      - ./Microservicio_Monitoreo/monitoreo/logs:/var/log/monitoreo
    command: -config.file=/etc/promtail/config.yml
    networks:
      - ofertaya_net
    depends_on:
      - loki

  # Grafana para visualización
  grafana:
    image: grafana/grafana:latest
    container_name: ofertaya_grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./Microservicio_Monitoreo/config/grafana/provisioning:/etc/grafana/provisioning
      - ./Microservicio_Monitoreo/config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - ofertaya_net
    depends_on:
      - prometheus
      - loki

  # Alertmanager para notificaciones
  alertmanager:
    image: prom/alertmanager
    container_name: ofertaya_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./Microservicio_Monitoreo/config/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - ofertaya_net

  # ==================== BASES DE DATOS ====================

  db_auth:
    image: postgres:16
    container_name: auth_db
    environment:
      POSTGRES_DB: ofertaya-auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - ofertaya_net

  db_pedidos:
    image: postgres:16
    container_name: pedidos_db
    environment:
      POSTGRES_DB: ofertaya-pedidos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pedidos_data:/var/lib/postgresql/data
    networks:
      - ofertaya_net

  db_subasta:
    image: postgres:16
    container_name: subasta_db
    environment:
      POSTGRES_DB: ofertaya-subasta
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - subasta_data:/var/lib/postgresql/data
    networks:
      - ofertaya_net

  db_ofertas:
    image: postgres:16
    container_name: ofertaya_oferta_db
    environment:
      POSTGRES_DB: ofertaya-oferta
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ofertas_data:/var/lib/postgresql/data
    networks:
      - ofertaya_net

  db_chat:
    image: postgres:16
    container_name: chat_db
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - chat_data:/var/lib/postgresql/data
    networks:
      - ofertaya_net

  # Base de datos para monitoreo
  db_monitoreo:
    image: postgres:15
    container_name: monitoreo_db
    environment:
      POSTGRES_DB: monitoreo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - monitoreo_data:/var/lib/postgresql/data
      - ./Microservicio_Monitoreo/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ofertaya_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  subasta_data:
  ofertas_data:
  pedidos_data:
  auth_data:
  chat_data:
  monitoreo_data:
  prometheus_data:
  loki_data:
  grafana_data:

networks:
  ofertaya_net:

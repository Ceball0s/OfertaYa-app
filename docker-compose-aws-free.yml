version: '3.8'

services:
  # Base de datos consolidada (una sola instancia PostgreSQL)
  postgres:
    image: postgres:15
    container_name: ofertaya_postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ofertaya_consolidated
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-consolidated.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ofertaya_net
    restart: unless-stopped

  # Eureka Server
  eureka-server:
    build: ./Microservicio-Eureka
    container_name: eureka_server
    ports:
      - "8761:8761"
    networks:
      - ofertaya_net
    environment:
      - SPRING_APPLICATION_NAME=eureka-server
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # API Gateway
  gateway-service:
    build: ./Microservicio-ApiGateway
    container_name: ofertaya_gateway_app
    depends_on:
      - eureka-server
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Auth Service
  auth-service:
    build: ./Microservicio-Autenticacion
    container_name: ofertaya_auth_app
    depends_on:
      - eureka-server
      - postgres
    ports:
      - "8084:8084"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/ofertaya_consolidated
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Subasta Service
  subasta-service:
    build: ./Microservicio-Subasta
    container_name: ofertaya_subasta_app
    depends_on:
      - eureka-server
      - postgres
    ports:
      - "8081:8081"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/ofertaya_consolidated
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Oferta Service
  oferta-service:
    build: ./Microservicio-Oferta
    container_name: ofertaya_oferta_app
    depends_on:
      - postgres
      - eureka-server
    ports:
      - "8082:8082"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/ofertaya_consolidated
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Pedidos Service
  pedidos-service:
    build: ./Microservicio-Pedido_Rastreo
    container_name: ofertaya_Pedido_app
    depends_on:
      - postgres
      - eureka-server
    ports:
      - "8083:8083"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/ofertaya_consolidated
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Monitoreo Service
  monitoreo-service:
    build:
      context: ./Microservicio_Monitoreo/monitoreo
      dockerfile: Dockerfile
    container_name: ofertaya_monitoreo_app
    ports:
      - "8085:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ofertaya_consolidated
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - postgres
      - eureka-server
    networks:
      - ofertaya_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Prometheus (versión ligera)
  prometheus:
    image: prom/prometheus:latest
    container_name: ofertaya_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Microservicio_Monitoreo/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'
    networks:
      - ofertaya_net
    depends_on:
      - monitoreo-service
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

  # Grafana (versión ligera)
  grafana:
    image: grafana/grafana:latest
    container_name: ofertaya_grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./Microservicio_Monitoreo/config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ofertaya_net
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  ofertaya_net:
    driver: bridge 